//bfs

#include <iostream>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <queue>
#define MAX 100000+10
using namespace std;
typedef long long ll;


int n,k;
int cot;
int visit[MAX];
queue <int> que;
void bfs(void)
{
    int head,temp;
    memset(visit,0,sizeof(visit));
    while(!que.empty())
        que.pop();

    visit[n] = 1;
    que.push(n);
    while(!que.empty()){
        int que_size = que.size();
        while(que_size--){
            head = que.front();
            que.pop();
            //if(head+1==k | head-1==k | head*2==k)
            if(head==k)
                return;
            for(int i=0 ; i < 3 ; i++){
                if(i==0){
                    temp = head + 1;
                }
                else if(i==1){
                    temp = head - 1;
                }
                else{
                    temp = head * 2;
                }
                if(temp < 0 | temp > 100000)
                    continue;
                if(!visit[temp]){
                    visit[temp] = 1;
                    que.push(temp);
                }
            }
        }
        cot++;
    }
    return;
}

int main()
{
    cin >> n >> k;
    bfs();
    cout << cot << endl;
    return 0;
}
