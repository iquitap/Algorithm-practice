#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#define N 50000+10

using namespace std;

int par[N],rel[N];
void init(int n)
{
    for(int i = 0;i < n;i++)
    {
        par[i] = i;
    }
    memset(rel,0,sizeof(rel));
}

int find_par(int x)
{
    int fx;
    if(x!=par[x])
    {
        fx = find_par(par[x]);
        rel[x] = (rel[x]+rel[par[x]])%3;//??
        par[x] = fx;
    }
    return par[x];
}

bool unio(int r,int x,int y)
{
    int fx,fy;
    fx = find_par(x);
    fy = find_par(y);
    if(fx==fy)
    {
        if((rel[y]-rel[x]+3)%3==r)
            return true;
        else
            return false;
    }
    par[fy]=fx;
    rel[fy]=(rel[x]-rel[y]+3+r)%3;
    return true;
}
void test(int n,int ans)
{
    for(int i = 0 ; i < n;i++)
    {
        printf("par[%d] = %d, rel[%d] = %d\n",i,par[i],i,rel[i]);
    }
    printf("ans = %d\n",ans);
}
int main()
{
    int n,k;
    int d,x,y;
    int ans = 0;
    scanf("%d%d",&n,&k);
    init(n);
    for(int i = 0;i < k;i++)
    {
        scanf("%d%d%d",&d,&x,&y);
        if(x>n || y>n || (d==2 && x==y))
            ans++;
        else if(!unio(d-1,x,y))
            ans++;
        //test(n,ans);
    }
    printf("%d",ans);
    return 0;
}
